decor "#pragma SDS data copy(val[0:NNZ])"

decl val: double[1666];
decl cols: bit<32>[1666];
decl row_delimiters: bit<32>[495];
decl vec: double[494];
decl out: double[494];

let sum: double = 0.0;
let si: double = 0.0;

let tmp_begin: bit<32> = 0;
let tmp_end: bit<32> = 0;
let j: bit<32> = 0;

for (let i = 0..494) {
  sum := 0.0;
  si := 0.0;
  tmp_begin := row_delimiters[i];
  ---
  tmp_end := row_delimiters[i+1];

  j := tmp_begin;
  while (j < tmp_end) {
    decor "#pragma HLS loop_tripcount avg=3"
    si := val[j] * vec[cols[j]];
    sum := sum + si;
    j := j + 1;
  }
  out[i] := sum;
}
