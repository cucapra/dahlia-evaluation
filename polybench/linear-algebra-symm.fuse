// BEGIN macro definition

define(M, 8)
define(N, 8)
define(DATATYPE, float)

// END macro definition

decl alpha: DATATYPE;
decl beta: DATATYPE;
decl C: DATATYPE[M][N];
decl A: DATATYPE[M][M];
decl B: DATATYPE[M][N];

let temp2 = 0.0;

for (let i = 0..M) {
  for (let j = 0..N) {
    temp2 := 0.0;
    let k = 0;
    // This is a 'for' loop in the original source
    while (k < i) {
      let C_k_j = C[k][j];
      ---
      C[k][j] := alpha * B[i][j] * A[i][k] + C_k_j;
      ---
      temp2 := temp2 + B[k][j] * A[i][k];

      // Update loop counter
      k := k + 1;
    }
    ---
    let C_i_j = C[i][j];
    ---
    C[i][j] := beta * C_i_j + alpha*B[i][j] * A[i][i] + alpha * temp2;
  }
}
