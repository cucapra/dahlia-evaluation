// BEGIN macro definition

define(M, 8)
define(N, 12)
define(DATATYPE, float)

// END macro definition

decl alpha: DATATYPE;
decl beta: DATATYPE;
decl C: DATATYPE[N][N];
decl A: DATATYPE[N][M];
decl B: DATATYPE[N][M];


for (let i = 0..N) {
  let j = 0;
  while(j <= i) {
    let C_i_j = C[i][j];
    ---
    C[i][j] := C_i_j * beta;

    // Update loop counter
    j := j + 1;
  }
  ---
  for (let k = 0..M) {
    let j2 = 0;
    while (j2 <= i) {
      let C_i_j2 = C[i][j2];
      let B_i_k = B[i][k];
      let A_j2_k = A[j2][k]
      ---
      C[i][j2] := A_j2_k * alpha * B_i_k +
                  B[j2][k] * alpha * A[i][k] + C_i_j2;
      // Update loop counter
      j2 := j2 + 1;
    }
  }
}
