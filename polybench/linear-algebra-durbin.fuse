// BEGIN macro definitions

define(N, 8)
define(DATATYPE, float)

// END macro definitions

decl r: DATATYPE[N];
decl y: DATATYPE[N];

// XXX(rachit): This should be a local array.
decl z: DATATYPE[N];

let alpha = 0.0 - r[0];
let beta = 1.0;
---
y[0] := 0.0 - r[0];
---
for (let k = 1..N) {
  beta := (1.0 - alpha * alpha) * beta;

  let sum = 0.0;
  let i = 0;
  while (i < k) {
    sum := sum + r[k-i-1] * y[i];
    // Update loop counter
    i := i + 1;
  }
  ---
  alpha := 0.0 - (r[k] + sum)/beta;

  i := 0;
  while(i < k) {
    let y_i = y[i];
    ---
    z[i] := y_i + alpha * y[k-i-1];
    // Update loop counter
    i := i + 1;
  }
  ---
  i := 0;
  while(i < k) {
    y[i] := z[i];
    // Update loop counter
    i := i + 1;
  }
  ---
  y[k] := alpha;
}
